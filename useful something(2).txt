安装ubuntu桌面：
	sudo apt-get install xinit
	sudo apt-get install gdm  ( 登陆窗口，用于管理账户登陆的，还可以用来切换别的桌面环境。 )
	sudo apt-get install ubuntu-desktop 
	shutdown -r now (重启操作，不行服务器重启)
查看unbuntu版本：
	cat /etc/issue
软件源替换：
	sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup
	vi /etc/apt/sources.list
	deb http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiverse	
	deb http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiverse
	deb http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiverse
	deb http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiverse
	deb http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiverse
	deb-src http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiverse
	deb-src http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiverse
	deb-src http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiverse
	deb-src http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiverse
	deb-src http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse
apt参数：
	apt-get install xxx 安装xxx  。如果带有参数，那么-d 表示仅下载 ，-f 表示强制安装  
	apt-get remove xxx 卸载xxx  
	apt-get update 更新软件信息数据库  
	apt-get upgrade 进行系统升级  
	apt-cache search 搜索软件包
unbuntu安装包默认存储位置：
	/var/cache/apt/archives
dpkg安装软件的方式:
	dpkg -i package.deb 	安装包
	dpkg -r package 	删除包
	dpkg -P package 	删除包（包括配置文件）
	dpkg -L package 	列出与该包关联的文件
	dpkg -l package 	显示该包的版本
	dpkg –unpack package.deb 	解开 deb 包的内容
	dpkg -S keyword 	搜索所属的包内容
	dpkg -l 	列出当前已安装的包
	dpkg -c package.deb 	列出 deb 包的内容
	dpkg –configure package 	配置包
安装ssh的命令：
	sudo apt-get install -y openssh-server
	sudo apt-get install ufw
	sudo ufw enable
	sudo ufw allow 22
安装网络命令工具:
	sudo apt install net-tools
查看系统服务命令：
	sudo service --status-all
查看端口状态及占用程序
	sudo netstat -ntulp|grep 3306 n表示不进行dns查询，t表示tcp程序，u表示udp协议，p表示正在使用的程序，l表示正在监听的程序
怎么将rpm格式的文件转成deb文件：
	sudo apt-get install alien
	sudo alien xxx.rpm
自动清除rc配置文件：
	dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
非常有用的清理命令：
	sudo apt-get autoclean              清理旧版本的软件缓存
	sudo apt-get clean                  清理所有软件缓存
	sudo apt-get autoremove             删除系统不再使用的孤立软件
安装播放器：
	sudo apt-get install smplayer
Mysql的一些命令：
	CREATE USER 'dog'@'localhost' IDENTIFIED BY '123456';
	CREATE USER 'pig'@'192.168.1.101_' IDENDIFIED BY '123456';
	CREATE USER 'pig'@'%' IDENTIFIED BY '123456';
	CREATE USER 'pig'@'%' IDENTIFIED BY '';
	CREATE USER 'pig'@'%';
	GRANT privileges ON databasename.tablename TO 'username'@'host'
	GRANT SELECT, INSERT ON test.user TO 'pig'@'%';
	GRANT ALL ON *.* TO 'pig'@'%';
	GRANT ALL ON maindataplus.* TO 'pig'@'%';
	SET PASSWORD FOR 'pig'@'%' = PASSWORD("123456");
	REVOKE SELECT ON *.* FR @OM 'pig'@'%';
	Delete FROM user Where User='test' and Host='localhost';
	update mysql.user set password=password('ÐÂÃÜÂë') where User="test" and Host="localhost";
	mysqldump -u root -p restaurant >wp.sql
	mysql -h 139.199.215.43 -P 10138 -uroot -pAiwm0109
	select user,plugin from user;
	skip-grant-table
	update user set authentication_string=password("ln122920"),plugin='mysql_native_password' where user='root';
	sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf
	mysql初次安装没有密码设置
		使用mysqladmin -uroot -p password
	解决root权限才能登陆的问题
		alter user 'root'@'localhost' identified with mysql_native_password by 'your password'
ifconfig配置ip：
设置服务开机自启动：
	systemctl 服务名 enable
	systemctl 服务名 disable
zip的解压和压缩：
	zip 文件名.zip 要压缩的文件1 要压缩的文件2 要压缩的文件3
	zip -d myfile.zip smart.txt 删除压缩文件中smart.txt文件
	zip -m myfile.zip ./rpm_info.txt 向压缩文件中myfile.zip中添加rpm_info.txt文件
	uzip file.zip 解压文件
	unzip -v file.zip 只查看文件里的目录，但不要解压
	unzip -n file.zip -d /home/ubuntu/yasuo 不覆盖原来的文件并把文件解压到指定的文件夹下
tar进行打包：
	tar -cf filename.tar file1 file2 file3 创建名为filename.tar的文件
	tar -tf filename.tar  查看打包文件里的内容
	tar -xf filename.tar 	抽取打包文件的内容
	tar -zcf filename.gz.tar 以gzip格式压缩文件并打包
gzip压缩：
	gzip -d finame 解压文件
ubuntu配置静态ip：
	vim /etc/network/interfaces
	auto enp0s25
	iface enp0s25 inet static
	address 172.20.32.230
	netmask 255.255.255.0
	gateway 172.20.32.1
	sudo ifconfig enp0s25 down
	sudo ifup ep0s25 
由静态ip转成动态ip：
	sudo ifdown enp0s25 
	sudo ifconfig enp0s25 up
ubuntu配置dns服务器
	vim /etc/resolv.conf
	nameserver 172.16.0.10
	nameserver 172.16.0.11
 	nameserver 172.16.0.12
	vim /etc/systemd/resolved.conf
	修改DNS=dns地址
我的mac地址：
	c8:5b:76:12:06:81
wumei的mac地址：	
	54:AB:3A:84:14:92		 
网络服务所在的位置：
	/etc/init.d/networking 
	重启它用 /etc/init.d/networking 就可以了
更改mac地址：
	ifconfig eth0 hw ether xx:xx:xx:xx:xx:xx
	arp -i eth0 -s xxx.xxx.xxx.xxx(IP) xx.xx.xx.xx.xx(MAC)
ubuntu jdk路径配置：
	export JAVA_HOME=/usr/lib/jdk1.8.0_211
	export JRE_HOME=${JAVA_HOME}/jre
	export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
	export PATH=${JAVA_HOME}/bin:$PATH
jdk 放置的路径：
	/usr/lib
eclispe 包放置的路径
	/opt
eclispe 桌面图标放置的路径：
	/usr/share/applications
eclispe 配置方法
	图标配置
		Desktop Entry]
			Encoding=UTF-8
			Name=Eclipse
			Comment=Eclipse
			Exec=/opt/eclipse/eclipse
			Icon=/opt/eclipse/icon.xpm
			Terminal=false
			StartupNotify=true
			Type=Application
			Categories=Application;Development;
	jre配置
		ln -s /usr/lib/jdk jre 
		rm -rf jre //删除jre软连接，不要带斜扛‘/’，带斜杆会把原来的bin文件也给删了
虚拟环境的使用
	virtualenv scrapingEnv 创建虚拟环境
	cd scrapingEnv/	
	source bin/activate 激活虚拟环境
	deactivate 退出虚拟环境
硬盘挂载：
	列出硬盘对象 sudo fdisk -l
	格式化硬盘 sudo mkfs -t ext4 /dev/sda4
	挂载硬盘 mount /dev/sda4 /home/wp/baidunetdiskdownload
	改硬盘的名字 e2label /dev/sda4 baidunetdisk
	设置自动挂载 sudo vim /etc/fstab 在行尾添加 /dev/sda4 /home/wp/ubuntu/baidunetdiskdownload ext4 defaults 0 0
grub引导修复：
	用ls (hhd0,序号)/boot/grub或者ls (hhd0.序号)/boot/grub 找出linux分区所在的地方
	sudo root=(hhd0,序号)
	sudo prefix=(hhd0,序号)/boot/grub或者（hdd0，序号）/grub
	insmod normal
	normal
	进入系统后，sudo update-grub2
		sudo grub-install /dev/sda
ubuntu控制手机的办法：
	Scrcpy 安装
		snap install scrcpy
	adb服务安装
		sudo apt-get install android-tools-adb
	用lsusb来查看手机usb设备号，前四位是设备号
	创建设备文件：
		mkdir ~/.android
		echo 0x04e8 > ~/.android/adb_usb.ini
		sudo touch /etc/udev/rules.d/android.rules
		sudo gedit /etc/udev/rules.d/android.rules
	在文件中输入:
		SUBSYSTEM=="usb", SYSFS{idVendor}=="04e8", MODE="0666"
	保存后修改文件权限	
		sudo chmod 777 /etc/udev/rules.d/android.rules
	启动adb服务
		service udev restart
	查看是否有设备挂载上来了
		adb devices
	最后启动服务
		scrcpy
git的安装及使用：
	配置ssh密钥：
		ssh-keygen -t rsa -C "youremail@example.com" 然后去gitgub上保存自己的密钥			
		检查密钥是否配置上去
			ssh -T git@github.com
	拉取仓库，但不合并到自己的目前的分支
		git fetch origin master
	合并分支
		git merge origin master
	直接拉取
		git pull origin master	
	创建新的分支
		git branch (分支名)
	切换分支
		git checkout(分支名)
	切换到主分支以后
		git merge (分支名)
	配置github用户名和邮箱地址
		git config --global user.name "wpaiwm"
		git config --global user.email "1228605963@qq.com"
	创建一个仓库
		git init
	提交代码
		提交全部
			git add .
		添加要提交的文件
			git add readme.txt
		提交
 			git commit -m "Wrote a readme file"
	
	在使用了修改了文件以后，想知道文件有那些改动
		查看修改的位置
			git status
		查看具体修改的内容
			git diff
	在使用了git commit以后，如何查看文件的提交记录
		查看提交日志
			git log
		git log出来的日志分析
			commit defd8af52be5183dfceb3e5cf23f78ea47d013b0
			Author: coder-pig <779878443@qq.com>
			Date:   Fri Jun 19 17:00:36 2015 +0800
			MainActivity Delete Menu
			依次是：
		        此次提交对应的版本号
        		提交人：姓名 邮箱
        		提交的时间
        		提交版本修改的内容：就是我们commit -m "xxx"里的xxx
	撤销未git add的修改
			git checkout src/com/jay/example/testforgit/MainActivity.java
	撤销已git add的修改
			git reset HEAD src/com/jay/example/testforgit/MainActivity.java
			git checkout src/com/jay/example/testforgit/MainActivity.java	
	回退到文件的前一个版本
			git reset --hard HEAD
			git reset --hard HEAD^
 			git log
	根据版本号来回退
			查看所有版本号
				git reflog
			回退到指定的版本号

				git reset --hard ad2080c
	git提交到github
		git init
		git add .
		git commit -m "first"
		git remote add origin https://github.com/wpaiwm/1603.git
		git push -u origin master
		git pull --rebase origin master
ubuntu搭建v2ray
	服务端的搭建：
		利用自动化脚本搭建：
			sudo su
			apt update && apt install -y curl
			bash <(curl -L -s https://install.direct/go.sh)
			启动服务：
				systemctl start v2ray
			然后vim /etc/v2ray/config.json
			配置如下：
				{
  					"inbounds": [
    					 {
      						"port": 443, // Vmess 协议服务器监听端口
      						"protocol": "vmess",
      						"settings": {
        						"clients": [
          							{
            								"id": "b831381d-6324-4d53-ad4f-8cda48b30811" // id(UUID) 需要修改
          							}
        						 ]
      						 }
    					 },
     					{
      						"port": 444, // SS 协议服务端监听端口
     						"protocol": "shadowsocks",
      						"settings": {
        						"method": "aes-128-gcm", // 加密方式
        						"password": "yuan.ga" //密码
      						}
    					}
  					],
  					"outbounds": [
   						 {
      							"protocol": "freedom",
      							"settings": {}
    						}
  					]
				}
				其中vmess协议id客户端和服务端要保持一致，id的生成可以由https://www.uuidgenerator.net/网址生成
maven 发布项目到tomcat
	在所创maven项目的pom.xml中加入如下代码
		<plugins>
			<plugin>
			    <groupId>org.apache.tomcat.maven</groupId>
			    <artifactId>tomcat7-maven-plugin</artifactId>
			    <version>2.2</version>
			    <configuration>
				<url>http://localhost:8080/manager/text</url>
			    	<server>tomcat</server>
				<username>tomcat</username>
				<password>123456</password>
			     </configuration>
		     	</plugin>
		 </plugins>

	然后在tomcat安装目录下的conf文件夹下的tomcat-user.xml处加入如下代码
		<role rolename="manager"/>
		<user username="tomcat" password="123456" roles="manager-script,tomcat,role1,admin,manager,manager-gui"/>
maven采用java8编译
	在所在项目的pom.xml中加入如下配置
		<properties>
  		  <!-- 使用java8的编译器来进行编译 -->
		  <maven.compiler.target>1.8</maven.compiler.target>
  		  <maven.compiler.source>1.8</maven.compiler.source>
		</properties>
ubuntu18.0安装搜狗输入法
    安装fctix依赖
        sudo apt install fcitx-bin
        sudo apt install fcitx-table
    卸载掉ibus
        sudo apt purge ibus
        sudo apt autoremove
        重启电脑
    安装搜狗拼音deb包
        sudo dpkg -i
        如果显示缺少依赖的话，可以用sudo apt install -f修复
        重启电脑
ubuntu18.0安装rabbitmq
	首先把ubuntu的镜像源改成阿里的
	安装erlang依赖
		sudo apt-get install erlang-nox
	安装rabbitmq
		sudo apt-get update
		sudo apt-get install rabbitmq-server
	启动、停止、重启、状态rabbitMq命令
		sudo rabbitmq-server start
		sudo rabbitmq-server stop
		sudo rabbitmq-server restart
		sudo rabbitmq-server status
	添加admin,并赋予administrator权限
		sudo rabbitmqctl add_user admin admin
		sudo rabbitmqctl set_user_tags admin administrator
	赋予virtual host中所有资源的配置、写、读权限以便管理其中的资源
		sudo rabbitmqctl set_permissions -p / admin '.*''.*''.*'
	登录rabbitmq gui界面
		cd /etc/rabbitmq
		sudo rabbitmq-plugins enable rabbitmq_management
		然后用浏览器访问 http://localhost:15672/	
mysql配置文件详解
	# mysql的shell脚本，用来启动mysql。nice命令是用来设定优先权，
	[mysqld_safe]
	socket      = /var/run/mysqld/mysqld.sock
	nice        = 0
	
	[mysqld]
	# mysql用哪个用户启动
	user        = mysql
	# 对应的pid和sock文件位置
	pid-file    = /var/run/mysqld/mysqld.pid
	socket      = /var/run/mysqld/mysqld.sock
	# 对应端口，有的单机启多个服务器的，每个服务器要用不同的端口
	port        = 3306
	# MySQL目录，数据目录，缓存目录，ubuntu修改datadir还有个坑，见我的收藏
	basedir     = /usr
	datadir     = /data/mysql
	tmpdir      = /tmp
	# 消息错误的语言,可以看这目录下的文件,一般不改
	lc-messages-dir = /usr/share/mysql
	# 跳过外部锁定，仅对MyISAM引擎表有用
	skip-external-locking
	# 允许外部IP访问，如果改成0.0.0.0，则每个外部服务器都能访问到，有安全问题
	bind-address        = 127.0.0.1
	# MySQL所允许的同时会话数上限，如果该值设的少，很容易出现 Too many connections
	max_connections        = 1000
	# 每个客户端连接的最大错误允许数，如果达到这个数的限制，这个客户端将会被MySQL
	# 服务阻止直到执行 Flush Hosts 或者服务重启
	max_connect_errors = 50
	# 设置最大包，限制server接收的数据包大小，避免超长SQL的执行问题
	max_allowed_packet = 16M
	# 关键词缓冲区大小，用来缓冲MyISAM表的索引块，决定了数据库索引处理的速度
	# 尤其是读取的速度
	key_buffer_size     = 3M
	thread_stack        = 192K
	# 服务端线程缓存
	thread_cache_size       = 300
	# 这个值应该为CPU核数的两倍，用于充分使用多核性能。
	# 这个变量是针对Solaris系统的，而且MYSQL5.6就去掉了，千万注意！！
	#thread_concurrency = 4
	# 自动修复MyISAM表，有几个选项，自己查阅文档吧
	myisam-recover-options  = BACKUP
	# 每个连接需要用到buffer时分配的内存大小，这个值不是越大越好，高并发用大值，容易
	# 导致内存耗尽，简单计算1000个连接时用1000*1m =1G内存
	sort_buffer_size = 1M
	# join表时用的缓存
	join_buffer_size = 8M
	# 单次查询缓冲区大小
	query_cache_limit   = 2M
	# 查询缓存大小。当一次查询完了之后，MySQL会把查询的结果缓存，当下次有相同查询
	# 就把缓存中的结果直接返回。牢记如果值设大了，而你的数据库场景是多写，会影响写入
	# 的效率。具体的原因查阅文档
	query_cache_size        = 128M
	
	# mysql常规日志，牢记线上环境别轻易开启，写入的日志量非常庞大。
	# 如果有什么需要调试和检查错误，可以开启一下
	#general_log_file        = /var/log/mysql/mysql.log
	#general_log             = 1
	
	# mysql的错误日志，有助于你查询mysql问题
	log_error = /var/log/mysql/error.log
	
	# mysql的慢查询日志，建议开启，一般超过1秒就是慢查询，如果担心可以设的长一点
	#log_slow_queries   = /var/log/mysql/mysql-slow.log
	#long_query_time = 2
	#log-queries-not-using-indexes
	
	# 和binlog相关的，暂不处理，主从复制需要用到
	#server-id      = 1
	#log_bin            = /var/log/mysql/mysql-bin.log
	expire_logs_days    = 10
	max_binlog_size   = 100M
	#binlog_do_db       = include_database_name
	#binlog_ignore_db   = include_database_name
	
	# 设置做MyISAM表全表扫描时的缓冲大小
	read_buffer_size =2M
	# 在排序后从排序好的数据读取行时，行数据从这个缓存区读出，合理设置这个值。可以提升 
	# order by的性能。注意：MySQL会为每个客户端连接申请该缓冲区，并发过大，该值过大会
	# 造成性能开销过大
	read_rnd_buffer_size = 1M
	# MyISAM表发生变化时候重新排序需要的缓存
	myisam_sort_buffer_size = 8M
	
	# innodb用来缓存来保存索引和原始数据，正确设置这个值，可以有效减少读取数据需要的磁盘# IO，比如书里面设置的数据是4G
	innodb_buffer_pool_size = 128M
	# 数据日志文件的大小。
	innodb_log_file_size = 128M
	# 日志文件的缓存
	innodb_log_buffer_size = 8M
	# 预写日志的方式，复杂，自己看文档吧
	innodb_flush_log_at_trx_commit =1
	# 再被回滚之前，一个innodb的事务应该等一个锁被批准多久。如果用了lock tables这种指令
	# 这时这个超时就非常有效果
	innodb_lock_wait_timeout =50
手动安装mysql
        先以root用户登录
		sudo su
	将解压好的文件放到/usr/local目录下
		tar -xvf mysql-5.6.34-linux-glibc2.5-x86_64.tar
		mv 解压出来的文件夹名 /usr/local/mysql
	新建mysql用户组
		groupadd mysql
		useradd -g mysql mysql
	新建/etc/my.cnf，并添加如下配置
		vim /etc/my.cnf && sudo chmod 777 /etc/my.cnf
		[mysql]
		# 设置mysql客户端默认字符集
		default-character-set=utf8 
		socket=/var/lib/mysql/mysql.sock

		[mysqld]
		skip-grant-tables  #跳过密码验证
		skip-name-resolve
		#设置3306端口
		port = 3306 
		socket=/var/lib/mysql/mysql.sock
		# 设置mysql的安装目录
		basedir=/usr/local/mysql
		# 设置mysql数据库的数据的存放目录
		datadir=/usr/local/mysql/data
		# 允许最大连接数
		max_connections=200
		# 服务端使用的字符集默认为8比特编码的latin1字符集
		character-set-server=utf8
		# 创建新表时将使用的默认存储引擎
		default-storage-engine=INNODB
		lower_case_table_name=1
		max_allowed_packet=16M
	修改mysql目录的所有者，并初始化数据库
		cd /usr/local/mysql
		chown -R mysql:mysql ./
		./scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/
		中间提示依赖问题，安装就可以了
	修改data目录用户所有者
		chown -R mysql:mysql data
	创建mysql socket通信目录
		sudo mkdir /var/lib/mysql && sudo chmod 777 /var/lib/mysql
	将mysql启动服务放到系统目录下
		cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql	建立软链接
		ln -s  /usr/local/mysql/bin/mysql    /usr/bin	
	配置mysql
		cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld
		chmod +x /etc/rc.d/init.d/mysqld
		sysv-rc-conf mysqld on
		vim /etc/profile
		export PATH=$PATH:/usr/local/mysql/bin
阿里云镜像源
	deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse
	deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
	deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse
ubuntu下查看图片
	xdg-open filename.png
ubuntu将左边的条设置隐藏调到底部
	首先安装两个工具
		sudo apt-get install gnome-tweak-tool
		sudo apt-get install gnome-shell-extension-dashtodock
	重启电脑
		在命令行输入gnome-tweaks
		在界面的扩展里设置相关选项
ubuntu使用百度网盘一直卡在加载界面的解决办法
	删除主目录的baidunetdisk目录
	cd ~
	rm -r baidunetdisk
idea和webstorm vim快捷键配置
	imap <A-k> <Up>
	imap <A-j> <Down>
	imap <A-h> <Left>
	imap <A-l> <Right>
	imap <A-o>  <Esc>o
	imap <A-;> <Esc>
	map  <A-;> <Esc>
ubuntu去除顶部导航栏的方法
	访问https://extensions.gnome.org/extension/545/hide-top-bar/ 安装hide-top-bar
	安装chrome-gnome-shell
		sudo apt install chrome-gnome-shell
	在之前的网页将hide-top-bar的开关打开 就可以配置了	
		
hongkong ip地址
	119.28.228.157
mysql ip地址和端口
	139.199.215.43 10138
ubuntu18.0安装redis
	sudo apt-get install redis-server
ubuntu开启热点
       命令行输入nm-connection-editor，然后点击下方的新建wifi，选择hotspot
biz2文件的使用
	.bz2 
		解压1：bzip2 -d FileName.bz2 
		解压2：bunzip2 FileName.bz2 
		压缩： bzip2 -z FileName 
	.tar.bz2 
	解压：tar jxvf FileName.tar.bz2 #显示解压详细过程       或tar --bzip xvf FileName.tar.bz2 #不显示解压详细过程
	压缩：tar jcvf FileName.tar.bz2 DirName 
ubuntu好用的截图工具
	sudo apt-get install flameshot	
	在ubuntu设置界面里添加快捷键
chrome自动代理插件
	Proxy SwitchSharp
		
		
	
	
	
	            
